{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","path","redirectTo","pathMatch","component","AppModule","declarations","providers","bootstrap","HomeComponent","http","modalService","config","formBuilder","toastr","apiUrl","playlistHandler","modelClose","isPlayListLoading","uploadedFileIsInValid","fileData","duration","playAudio","audioIsPlaying","name","deleteFileName","displayedColumns","headers","columns","dataSource","backdrop","keyboard","playlistForm","group","required","file","getUploadedFiles","get","subscribe","files","updateTableData","data","pause","Audio","base64","filename","play","getfile","playlist","sort","playListSort","paginator","content","isDelete","reset","open","centered","size","close","invalid","error","isExists","forEach","elem","warning","formData","FormData","append","value","set","post","closeModal","success","audio","URL","createObjectURL","item","addEventListener","toFixed","allowType","indexOf","type","filterValue","filter","trim","toLowerCase","confirmationModal","res","playListFilter","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;AAEA;AAAA;AAAA;AAAA,UAIaC,gBAJb;AAAA;AAAA;;;cAIaA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;KAJ7B;;;0HAIaC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA,UAKaM,YALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,mBAAR;AACD,OAPD;;;yBAKaD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;AACA;;;;;;;KDAA;;;;;sEAKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAMR,MAAM,GAAW,CACrB;AAAES,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KADqB,EAErB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,IAAR;AAAcC,gBAAU,EAAE;AAA1B,KAHqB,CAAvB;;AAMA;AAAA;AAAA;AAAA,UAwBaG,SAxBb;AAAA;AAAA;;;cAwBaA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAhBJ,CACP,uEADO,EAEP,oEAFO,EAGP,sEAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,gFANO,EAOP,uEAPO,EAQP,8EARO,EASP,6DAAaX,OAAb,CAAqBF,MAArB,CATO,EAUP,4FAVO,EAWP,qEAXO,EAYP,2DAZO,EAaP,mEAbO,EAcP,yDAAaE,OAAb,EAdO,CAgBI;;;KArBf;;;0HAwBaW,S,EAAS;AAAA,uBAtBlB,2DAsBkB,EArBlB,kEAqBkB;AArBL,kBAGb,uEAHa,EAIb,oEAJa,EAKb,sEALa,EAMb,oEANa,EAOb,sEAPa,EAQb,gFARa,EASb,uEATa,EAUb,8EAVa,EAUK,4DAVL,EAYb,4FAZa,EAab,qEAba,EAcb,2DAda,EAeb,mEAfa,EAeM,wDAfN;AAqBK,O;AANC,K;;;;;sEAMVA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,CADN;AAKRX,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,sEAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,gFANO,EAOP,uEAPO,EAQP,8EARO,EASP,6DAAaD,OAAb,CAAqBF,MAArB,CATO,EAUP,4FAVO,EAWP,qEAXO,EAYP,2DAZO,EAaP,mEAbO,EAcP,yDAAaE,OAAb,EAdO,CALD;AAqBRa,mBAAS,EAAE,EArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD;AAtBH,S;AAwBY,Q;;;;;;;;;;;;;;;;;;AChDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;ACiBY;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAGA;;AACqD;;AAA4C;;;;;;;;AAA5C;;AAAA;;;;;;;;AAG7C;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC4C;;;;;;;;AACxE;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;;;;;AAL3D;;AACI;;AACI;;AAEA;;AAEJ;;AACJ;;;;;;;;AAJY;;AAAA;;AACwB;;AAAA;;;;;;;;AAKpC;;AACI;;AACI;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAC3F;;AACJ;;;;;;AAhBJ;;AACI;;AAEA;;AASA;;AAKJ;;;;;;AAfQ;;AAAA;;AACE;;AAAA;;AASA;;AAAA;;;;;;AAhBd;;AACI;;AAGA;;AAkBJ;;;;;;AAtBoF;;;;;;AAwBpF;;;;;;AACA;;;;;;AAGJ;;AAAiD;;AAAW;;;;;;AAE5D;;AAEI;;AACJ;;;;;;;;AAQA;;AACI;;AAA+C;;AAAe;;AAC9D;;AAAuD;AAAA;AAAA,iBAAS,kBAAc,aAAd,CAAT;AAAqC,SAArC;;AACnD;;AAAyB;;AAAC;;AAC9B;;AACJ;;AACA;;AAEI;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAC7B;;AAEI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AAEA;;AACI;;AAAO;;AAAY;;AACnB;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAGJ;;AAEJ;;AAEJ;;AAEJ;;AACA;;AACI;;AAAgD;AAAA;AAAA,iBAAS,gBAAY,YAAZ,CAAT;AAAkC,SAAlC;;AAAoC;;AAAM;;AAC1F;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AACb;;AAAM;;AAChD;;;;;;AAxBU;;AAAA;;AAuBF;;AAAA;;;;;;;;AAOR;;AACI;;AAAuD;AAAA;AAAA,iBAAS,kBAAc,aAAd,CAAT;AAAqC,SAArC;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAA6B;;AACrC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AACvF;;;;;;;;ADrGJ;AAAA;AAAA;AAAA,UAKaC,aALb;AA8BE,+BACUC,IADV,EAEUC,YAFV,EAGEC,MAHF,EAIUC,WAJV,EAKUC,MALV,EAK+B;AAAA;;AAJrB,eAAAJ,IAAA,GAAAA,IAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAEA,eAAAE,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AA5BV,eAAAC,MAAA,GAAS,wBAAT;AACA,eAAAC,eAAA,GAAuB;AACrBC,sBAAU,EAAE,IADS;AAErBC,6BAAiB,EAAE,KAFE;AAGrBC,iCAAqB,EAAE,KAHF;AAIrBC,oBAAQ,EAAE,IAJW;AAKrBC,oBAAQ,EAAE,IALW;AAMrBC,qBAAS,EAAE,IANU;AAOrBC,0BAAc,EAAE;AACdC,kBAAI,EAAE;AADQ,aAPK;AAUrBC,0BAAc,EAAE;AAVK,WAAvB;AAYA,eAAAC,gBAAA,GAAmB;AACjBC,mBAAO,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA+B,QAA/B,CADQ;AAEjBC,mBAAO,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB,EAA8B,QAA9B;AAFQ,WAAnB;AAIA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAA4B,EAA5B,CAAb;AAaEjB,gBAAM,CAACkB,QAAP,GAAkB,QAAlB;AACAlB,gBAAM,CAACmB,QAAP,GAAkB,KAAlB;AACD;;AAvCH;AAAA;AAAA,qCAyCa;AACT,iBAAKf,eAAL,CAAqBE,iBAArB,GAAyC,IAAzC;AACA,iBAAKc,YAAL,GAAoB,KAAKnB,WAAL,CAAiBoB,KAAjB,CAAuB;AACzCT,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWU,QAAhB,CADmC;AAEzCC,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFmC,aAAvB,CAApB;AAIA,iBAAKE,gBAAL;AAED;AAED;;;;AAnDF;AAAA;AAAA,6CAsDqB;AAAA;;AACjB,iBAAK1B,IAAL,CAAU2B,GAAV,WAAiB,KAAKtB,MAAtB,eAAwCuB,SAAxC,CAAkD,UAAAC,KAAK,EAAI;AACzD,mBAAI,CAACC,eAAL,CAAqBD,KAArB;;AACA,mBAAI,CAACvB,eAAL,CAAqBE,iBAArB,GAAyC,KAAzC;AACD,aAHD;AAID;AAED;;;;;AA7DF;AAAA;AAAA,mCAiEWuB,IAjEX,EAiEiB;AACb,gBAAI,KAAKzB,eAAL,CAAqBM,SAAzB,EAAoC;AAClC,mBAAKN,eAAL,CAAqBO,cAArB,GAAsC;AAAEC,oBAAI,EAAE;AAAR,eAAtC;AACA,mBAAKR,eAAL,CAAqBM,SAArB,CAA+BoB,KAA/B;AACA,mBAAK1B,eAAL,CAAqBM,SAArB,GAAiC,IAAjC;AACD,aAJD,MAIO;AACL,mBAAKN,eAAL,CAAqBM,SAArB,GAAiC,IAAIqB,KAAJ,CAAU,6BAA6BF,IAAI,CAACG,MAA5C,CAAjC;AACA,mBAAK5B,eAAL,CAAqBO,cAArB,GAAsC;AAAEC,oBAAI,EAAEiB,IAAI,CAACI;AAAb,eAAtC;AACA,mBAAK7B,eAAL,CAAqBM,SAArB,CAA+BwB,IAA/B;AACD;AACF;AAED;;;;;AA7EF;AAAA;AAAA,0CAiFkBP,KAjFlB,EAiFyB;AACrB,gBAAMQ,OAAO,GAAQR,KAArB;AACA,iBAAKV,UAAL,GAAkB,IAAI,0EAAJ,CAA4BkB,OAAO,CAACC,QAApC,CAAlB;AACA,iBAAKnB,UAAL,CAAgBoB,IAAhB,GAAuB,KAAKC,YAA5B;AACA,iBAAKrB,UAAL,CAAgBsB,SAAhB,GAA4B,KAAKA,SAAjC;AACD;AAED;;;;;AAxFF;AAAA;AAAA,+BA4FOC,OA5FP,EA4FgBC,QA5FhB,EA4FgC;AAC5B,gBAAI,CAACA,QAAL,EAAe;AACb,mBAAKrC,eAAL,CAAqBI,QAArB,GAAgC,IAAhC;AACA,mBAAKJ,eAAL,CAAqBK,QAArB,GAAgC,IAAhC;AACA,mBAAKL,eAAL,CAAqBS,cAArB,GAAsC,IAAtC;AACA,mBAAKO,YAAL,CAAkBsB,KAAlB;AACD;;AACD,iBAAKtC,eAAL,CAAqBC,UAArB,GAAkC,KAAKN,YAAL,CAAkB4C,IAAlB,CAAuBH,OAAvB,EAAgC;AAChEI,sBAAQ,EAAE,IADsD;AAEhEC,kBAAI,EAAE;AAF0D,aAAhC,CAAlC;AAID;AAED;;;;AAzGF;AAAA;AAAA,uCA4Ge;AACX,gBAAI,KAAKzC,eAAL,CAAqBC,UAAzB,EAAqC;AACnC,mBAAKD,eAAL,CAAqBI,QAArB,GAAgC,IAAhC;AACA,mBAAKJ,eAAL,CAAqBK,QAArB,GAAgC,IAAhC;AACA,mBAAKL,eAAL,CAAqBS,cAArB,GAAsC,IAAtC;AACA,mBAAKT,eAAL,CAAqBC,UAArB,CAAgCyC,KAAhC;AACD;AACF;AAED;;;;AArHF;AAAA;AAAA,qCAwHa;AAAA;;AACT,gBAAI,KAAK1B,YAAL,CAAkB2B,OAAtB,EAA+B;AAC7B;AACD,aAFD,MAEO,IAAI,KAAK3C,eAAL,CAAqBG,qBAAzB,EAAgD;AACrD,mBAAKL,MAAL,CAAY8C,KAAZ,CAAkB,iBAAlB;AACA;AACD,aANQ,CAQT;;;AACA,gBAAIC,QAAQ,GAAG,KAAf;AACA,iBAAKhC,UAAL,CAAgBY,IAAhB,CAAqBqB,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrC,kBAAIA,IAAI,CAAClB,QAAL,KAAkB,MAAI,CAAC7B,eAAL,CAAqBI,QAArB,CAA8BI,IAApD,EAA0D;AACxDqC,wBAAQ,GAAG,IAAX;AACD;AACF,aAJD;;AAMA,gBAAIA,QAAJ,EAAc;AACZ,mBAAK/C,MAAL,CAAYkD,OAAZ,CAAoB,qBAApB;AACA;AACD;;AAED,gBAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,gBAAM3B,KAAK,GAAQ,KAAKvB,eAAL,CAAqBI,QAAxC;AACA6C,oBAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B5B,KAA7B,EAAoCA,KAAK,CAACf,IAA1C;AACAyC,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKnC,YAAL,CAAkBoC,KAAlB,CAAwB5C,IAAjD;AACAyC,oBAAQ,CAACI,GAAT,CAAa,UAAb,EAAyB,KAAKrD,eAAL,CAAqBK,QAA9C;AACA,iBAAKX,IAAL,CAAU4D,IAAV,WAAkB,KAAKvD,MAAvB,aAAuCkD,QAAvC,EAAiD3B,SAAjD,CAA2D,UAAAH,IAAI,EAAI;AACjE,oBAAI,CAACoC,UAAL;;AACA,oBAAI,CAACzD,MAAL,CAAY0D,OAAZ,CAAoB,wBAApB;;AACA,oBAAI,CAAChC,eAAL,CAAqBL,IAArB;AACD,aAJD;AAKD;AAED;;;;;AAzJF;AAAA;AAAA,0CA6JkBf,QA7JlB,EA6J4B;AAAA;;AAExB,gBAAMqD,KAAK,GAAG,IAAI9B,KAAJ,CAAU+B,GAAG,CAACC,eAAJ,CAAoBvD,QAAQ,CAACwD,IAAT,CAAc,CAAd,CAApB,CAAV,CAAd;AACAH,iBAAK,CAACI,gBAAN,CAAuB,YAAvB,EAAqC,YAAM;AACzC,oBAAI,CAAC7D,eAAL,CAAqBK,QAArB,GAAgCoD,KAAK,CAACpD,QAAN,CAAeyD,OAAf,CAAuB,CAAvB,CAAhC;AACD,aAFD;AAGA,iBAAK9D,eAAL,CAAqBG,qBAArB,GAA6C,KAA7C;AACA,gBAAM4D,SAAS,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,CAAlB;;AACA,gBAAIA,SAAS,CAACC,OAAV,CAAkB5D,QAAQ,CAAC,CAAD,CAAR,CAAY6D,IAA9B,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,mBAAKjE,eAAL,CAAqBG,qBAArB,GAA6C,IAA7C;AACA,mBAAKL,MAAL,CAAY8C,KAAZ,CAAkB,iBAAlB;AACD,aAHD,MAGO;AACL,mBAAK5C,eAAL,CAAqBI,QAArB,GAAgCA,QAAQ,CAACwD,IAAT,CAAc,CAAd,CAAhC;AACD;AACF;AAED;;;;;AA7KF;AAAA;AAAA,yCAiLiBM,WAjLjB,EAiL8B;AAC1B,iBAAKrD,UAAL,CAAgBsD,MAAhB,GAAyBD,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAED;;;;;AArLF;AAAA;AAAA,qCAyLaxC,QAzLb,EAyLuB;AACnB,iBAAK7B,eAAL,CAAqBS,cAArB,GAAsCoB,QAAtC;AACA,iBAAKU,IAAL,CAAU,KAAK+B,iBAAf,EAAkC,QAAlC;AACD;AAED;;AA9LF;AAAA;AAAA,0CA+LkB;AAAA;;AACd,iBAAK5E,IAAL,WAAiB,UAAG,KAAKK,MAAR,eAA0B,KAAKC,eAAL,CAAqBS,cAAhE,EAAgFa,SAAhF,CAA0F,UAAAiD,GAAG,EAAI;AAC/F,oBAAI,CAACvE,eAAL,CAAqBS,cAArB,GAAsC,IAAtC;;AACA,oBAAI,CAACe,eAAL,CAAqB+C,GAArB;;AACA,oBAAI,CAAChB,UAAL;;AACA,oBAAI,CAACzD,MAAL,CAAY0D,OAAZ,CAAoB,sBAApB;AACD,aALD;AAMD;AAtMH;AAAA;AAAA,wCAwMgB;AACZ,iBAAKxD,eAAL,GAAuB;AACrBC,wBAAU,EAAE,IADS;AAErBC,+BAAiB,EAAE,KAFE;AAGrBC,mCAAqB,EAAE,KAHF;AAIrBC,sBAAQ,EAAE,IAJW;AAKrBC,sBAAQ,EAAE,IALW;AAMrBC,uBAAS,EAAE,IANU;AAOrBC,4BAAc,EAAE;AACdC,oBAAI,EAAE;AADQ,eAPK;AAUrBC,4BAAc,EAAE;AAVK,aAAvB;AAYD;AArNH;;AAAA;AAAA;;;yBAKahB,a,EAAa,gI,EAAA,oI,EAAA,0I,EAAA,2H,EAAA,yH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;sEAqBb,wE,EAAc,I;;;;;;;;;;;;;;;;;;;;;;ACpC3B;;AAEI;;AACI;;AACI;;AACI;;AAAgB;AAAA,qBAAS,IAAA+E,cAAA,qBAAT;AAA4C,aAA5C;;AAAhB;;AACJ;;AACJ;;AACA;;AAAwC;AAAA;;AAAA;;AAAA,qBAAS,IAAAjC,IAAA,KAAT;AAA6B,aAA7B;;AACpC;;AACA;;AAAM;;AAAY;;AACtB;;AACJ;;AAEA;;AAEI;;AAwBA;;AACA;;AACJ;;AAEA;;AAEA;;AAKA;;AAEJ;;AAGA;;AAsCA;;;;AAhFe;;AAAA;;AAEO;;AAAA;;AAwBE;;AAAA;;AACP;;AAAA;;AAGR;;AAAA;;AAEA;;AAAA;;AAKU;;AAAA,qFAAe,iBAAf,EAAe,qEAAf;;;;;;;KDzCnB;;;;;sEAKa9C,a,EAAa;cALzB,uDAKyB;eALf;AACTX,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;gBAqBvB,uD;iBAAU,wE,EAAc;AAAE,sBAAQ;AAAV,W;;;gBACxB,uD;iBAAU,c,EAAgB;AAAE,sBAAQ;AAAV,W;;;gBAC1B,uD;iBAAU,mB,EAAqB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEtClC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyF,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACjC,KAAR,CAAcgC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'playlistchallenge';\n}\n","<header></header>\n<router-outlet></router-outlet>\n<footer></footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: 'home' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatTableModule,\n    MatSortModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, OnDestroy } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  playlistForm: FormGroup;\n  apiUrl = 'http://localhost:8001/';\n  playlistHandler: any = {\n    modelClose: null,\n    isPlayListLoading: false,\n    uploadedFileIsInValid: false,\n    fileData: null,\n    duration: null,\n    playAudio: null,\n    audioIsPlaying: {\n      name: null\n    },\n    deleteFileName: null\n  };\n  displayedColumns = {\n    headers: ['ALBUMN', 'DURATION', 'PLAY', 'DELETE'],\n    columns: ['album', 'duration', 'play', 'delete']\n  };\n  dataSource = new MatTableDataSource<any>([]);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild('playListSort', { static: true }) playListSort: MatSort;\n  @ViewChild('confirmationModal', { static: true }) private confirmationModal: TemplateRef<any>;\n\n  constructor(\n    private http: HttpClient,\n    private modalService: NgbModal,\n    config: NgbModalConfig,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngOnInit() {\n    this.playlistHandler.isPlayListLoading = true;\n    this.playlistForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      file: ['', Validators.required]\n    });\n    this.getUploadedFiles();\n\n  }\n\n  /**\n   * Get uploaded files\n   */\n  getUploadedFiles() {\n    this.http.get(`${this.apiUrl}getFiles`).subscribe(files => {\n      this.updateTableData(files);\n      this.playlistHandler.isPlayListLoading = false;\n    });\n  }\n\n  /**\n   * Play selected file\n   * @param data file data\n   */\n  playfile(data) {\n    if (this.playlistHandler.playAudio) {\n      this.playlistHandler.audioIsPlaying = { name: null };\n      this.playlistHandler.playAudio.pause();\n      this.playlistHandler.playAudio = null;\n    } else {\n      this.playlistHandler.playAudio = new Audio('data:audio/x-wav;base64,' + data.base64);\n      this.playlistHandler.audioIsPlaying = { name: data.filename };\n      this.playlistHandler.playAudio.play();\n    }\n  }\n\n  /**\n   * Load data to table\n   * @param files - files information\n   */\n  updateTableData(files) {\n    const getfile: any = files;\n    this.dataSource = new MatTableDataSource<any>(getfile.playlist);\n    this.dataSource.sort = this.playListSort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * Open ngb modal windw\n   * @param content - modal content reference\n   */\n  open(content, isDelete?: any) {\n    if (!isDelete) {\n      this.playlistHandler.fileData = null;\n      this.playlistHandler.duration = null;\n      this.playlistHandler.deleteFileName = null;\n      this.playlistForm.reset();\n    }\n    this.playlistHandler.modelClose = this.modalService.open(content, {\n      centered: true,\n      size: 'lg'\n    });\n  }\n\n  /**\n   * Ngb Modal close\n   */\n  closeModal() {\n    if (this.playlistHandler.modelClose) {\n      this.playlistHandler.fileData = null;\n      this.playlistHandler.duration = null;\n      this.playlistHandler.deleteFileName = null;\n      this.playlistHandler.modelClose.close();\n    }\n  }\n\n  /**\n   * Create playlist form submit\n   */\n  onSubmit() {\n    if (this.playlistForm.invalid) {\n      return;\n    } else if (this.playlistHandler.uploadedFileIsInValid) {\n      this.toastr.error('File is invalid');\n      return;\n    }\n\n    // Check already data is exists or not\n    let isExists = false;\n    this.dataSource.data.forEach((elem) => {\n      if (elem.filename === this.playlistHandler.fileData.name) {\n        isExists = true;\n      }\n    });\n\n    if (isExists) {\n      this.toastr.warning('File already exists');\n      return;\n    }\n\n    const formData = new FormData();\n    const files: any = this.playlistHandler.fileData;\n    formData.append('uploads[]', files, files.name);\n    formData.append('album', this.playlistForm.value.name);\n    formData.set('duration', this.playlistHandler.duration);\n    this.http.post(`${this.apiUrl}upload`, formData).subscribe(file => {\n      this.closeModal();\n      this.toastr.success('Successfully uploaded!');\n      this.updateTableData(file);\n    });\n  }\n\n  /**\n   * Check the uploaded is valid/invalid\n   * @param fileData - uploaded file data\n   */\n  validateTheFile(fileData) {\n\n    const audio = new Audio(URL.createObjectURL(fileData.item(0)));\n    audio.addEventListener('loadeddata', () => {\n      this.playlistHandler.duration = audio.duration.toFixed(2);\n    });\n    this.playlistHandler.uploadedFileIsInValid = false;\n    const allowType = ['audio/wav', 'audio/ogg', 'audio/mp3'];\n    if (allowType.indexOf(fileData[0].type) === -1) {\n      this.playlistHandler.uploadedFileIsInValid = true;\n      this.toastr.error('File is invalid');\n    } else {\n      this.playlistHandler.fileData = fileData.item(0);\n    }\n  }\n\n  /**\n   * Filter table data\n   * @param filterData Filter input\n   */\n  playListFilter(filterValue) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Confirmation to delete file\n   * @param deleteData - Delete file data\n   */\n  deletefile(filename) {\n    this.playlistHandler.deleteFileName = filename;\n    this.open(this.confirmationModal, 'delete');\n  }\n\n  /** Delete the selected file */\n  proceedDelete() {\n    this.http.delete(`${this.apiUrl}delete/` + this.playlistHandler.deleteFileName).subscribe(res => {\n      this.playlistHandler.deleteFileName = null;\n      this.updateTableData(res);\n      this.closeModal();\n      this.toastr.success('Successfully Deleted');\n    });\n  }\n\n  ngOnDestroy() {\n    this.playlistHandler = {\n      modelClose: null,\n      isPlayListLoading: false,\n      uploadedFileIsInValid: false,\n      fileData: null,\n      duration: null,\n      playAudio: null,\n      audioIsPlaying: {\n        name: null\n      },\n      deleteFileName: null\n    };\n  }\n}\n","<div class=\"play-list-sec\">\n\n    <div class=\"search-section\">\n        <div>\n            <mat-form-field>\n                <input matInput (keyup)=\"playListFilter($event.target.value)\" placeholder=\"Search\">\n            </mat-form-field>\n        </div>\n        <div class=\"cursor-pointer float-right\" (click)=\"open(createPlayList)\">\n            <i class=\"fa fa-plus mr-1\" aria-hidden=\"true\"></i>\n            <span>Add Playlist</span>\n        </div>\n    </div>\n\n    <mat-table [dataSource]=\"dataSource\" #playListSort=\"matSort\" matSort matSortActive=\"album\" matSortDirection=\"desc\">\n\n        <ng-container *ngFor=\"let disCol of displayedColumns.columns; let colIndex = index\" matColumnDef=\"{{disCol}}\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{displayedColumns?.headers[colIndex]}}\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span\n                    *ngIf=\"disCol !== 'play' && disCol !== 'delete'\">{{element[disCol] ? element[disCol] : '--'}}</span>\n                <span *ngIf=\"disCol === 'play'\">\n                    <span class=\"cursor-pointer\">\n                        <i class=\"fa fa-play fa-1x\" (click)=\"playfile(element)\" aria-hidden=\"true\"\n                            *ngIf=\"playlistHandler.audioIsPlaying.name !== element['filename']\"></i>\n                        <i class=\"fa fa-stop fa-1x\" *ngIf=\"playlistHandler.audioIsPlaying.name === element['filename']\"\n                            (click)=\"playfile(element)\" aria-hidden=\"true\"></i>\n                    </span>\n                </span>\n\n                <span *ngIf=\"disCol === 'delete'\">\n                    <span class=\"cursor-pointer\">\n                        <i class=\"fa fa-trash fa-1x\" (click)=\"deletefile(element.filename)\" aria-hidden=\"true\"></i>\n                    </span>\n                </span>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns?.columns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns?.columns;\"></mat-row>\n    </mat-table>\n\n    <div *ngIf=\"playlistHandler?.isPlayListLoading\"> Loading... </div>\n\n    <div *ngIf=\"!playlistHandler?.isPlayListLoading && (!dataSource?.data?.length || !dataSource?.filteredData?.length)\"\n        class=\"text-center\">\n        No Records Found...\n    </div>\n\n    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\n\n</div>\n\n<!-- Create Playlist from -->\n<ng-template #createPlayList let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Create Playlist</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">×</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n\n        <form [formGroup]=\"playlistForm\" (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\n            <div class=\"form-row\">\n\n                <div class=\"form-group col-12\">\n                    <label>Name</label>\n                    <input type=\"text\" ngbAutoFocus formControlName=\"name\" class=\"form-control\" />\n                </div>\n\n                <div class=\"form-group col-12\">\n                    <label>Choose Audio</label>\n                    <input formControlName=\"file\" id=\"file\" type=\"file\" class=\"form-control\"\n                        (change)=\"validateTheFile($event.target.files)\" accept=\"audio/mp3,audio/ogg,audio/wav\">\n\n                </div>\n\n            </div>\n\n        </form>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.close('Save click')\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary mr-1\" (click)=\"onSubmit()\"\n            [disabled]=\"playlistForm.invalid\">Submit</button>\n    </div>\n</ng-template>\n\n\n<!-- Confirmation modal window -->\n<ng-template #confirmationModal let-modal>\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form>\n            <div class=\"form-group\">\n                <div ngbAutoFocus>\n                    <h4>Are you sure want to delete? </h4>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"proceedDelete()\">Delete</button>\n    </div>\n</ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}